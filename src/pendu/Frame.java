/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pendu;

import javax.swing.JOptionPane;

/**
 *
 * @author yann
 */
public class Frame extends javax.swing.JFrame {
    int essais;
    String crypted_word;
    String original_word;
    char[] letters_tried;
    boolean win;
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        InputTF.setEnabled(false);
        Valider.setEnabled(false);
        initGame();
    }
    
    public void initGame(){
        this.essais = 5;
        this.crypted_word = "";
        this.original_word = "";
        this.letters_tried = new char[26];
        this.win = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        North = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CryptWordLabel = new javax.swing.JLabel();
        Center = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        EssaisLabel = new javax.swing.JLabel();
        South = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        LettreTriedLabel = new javax.swing.JLabel();
        InputTF = new javax.swing.JTextField();
        Valider = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        StartMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        North.setLayout(new java.awt.GridLayout(1, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mot à chercher:");
        North.add(jLabel1);

        CryptWordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CryptWordLabel.setText("===================");
        North.add(CryptWordLabel);

        getContentPane().add(North, java.awt.BorderLayout.NORTH);

        Center.setLayout(new java.awt.GridLayout(1, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(EssaisLabel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(EssaisLabel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Center.add(jPanel2);

        getContentPane().add(Center, java.awt.BorderLayout.CENTER);

        South.setLayout(new java.awt.GridLayout(2, 2));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Entrez une lettre:");
        South.add(jLabel2);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        jPanel1.add(LettreTriedLabel);

        South.add(jPanel1);
        South.add(InputTF);

        Valider.setText("Valider");
        Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderActionPerformed(evt);
            }
        });
        South.add(Valider);

        getContentPane().add(South, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("Jeu");

        StartMenuItem.setText("Nouvelle partie");
        StartMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(StartMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartMenuItemActionPerformed
        initGame();
        original_word = JOptionPane.showInputDialog("Entrez le mot à rechercher:");
        for (int i = 0; i < original_word.length(); i++){
            crypted_word += "-";
        }
        CryptWordLabel.setText(crypted_word);
        InputTF.setEnabled(true);
        Valider.setEnabled(true);
        updateUI();
    }//GEN-LAST:event_StartMenuItemActionPerformed

    private void ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderActionPerformed
        if (InputTF.getText()!= ""){
            char test = InputTF.getText().charAt(0);
            
            int i = 0;
            boolean found = false;
            while (i < original_word.length()){
                if (original_word.charAt(i) == test){
                    char[] temp = crypted_word.toCharArray();
                    temp[i] = original_word.charAt(i);
                    crypted_word = new String(temp);
                    found = true;
                }
                i++;
            }
            
            if (found == false){
                i = 0;
                boolean placed = false;
                while (i < letters_tried.length && placed == false){
                    if (letters_tried[i] == test){
                        placed = true;
                    }
                    else{
                        if (letters_tried[i] == '\u0000'){
                            letters_tried[i] = test;
                            placed = true;
                        }
                    }
                    i++;
                }
                essais--;
                LettreTriedLabel.setText("");
                for (i = 0; i < letters_tried.length; i++){
                    if(letters_tried[i] != '\u0000'){
                        LettreTriedLabel.setText(LettreTriedLabel.getText()+" "+ letters_tried[i]);
                    }
                }
            }
            for (i = 0; i < original_word.length(); i++){
                if (crypted_word.charAt(i) != original_word.charAt(i)){
                    win = false;
                }
            }
            
            InputTF.setText("");
            CryptWordLabel.setText(crypted_word);
            if (win == false && essais == 0){
                InputTF.setEnabled(false);
                Valider.setEnabled(false);
                LettreTriedLabel.setText("");
            }
        }
        updateUI();
    }//GEN-LAST:event_ValiderActionPerformed

    
    public void updateUI(){
        switch(essais){
            case 5:
                EssaisLabel.setText(""+5);
                break;
            case 4:
                EssaisLabel.setText(""+4);
                break;
            case 3:
                EssaisLabel.setText(""+3);
                break;
            case 2:
                EssaisLabel.setText(""+2);
                break;
            case 1:
                EssaisLabel.setText(""+1);
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Center;
    private javax.swing.JLabel CryptWordLabel;
    private javax.swing.JLabel EssaisLabel;
    private javax.swing.JTextField InputTF;
    private javax.swing.JLabel LettreTriedLabel;
    private javax.swing.JPanel North;
    private javax.swing.JPanel South;
    private javax.swing.JMenuItem StartMenuItem;
    private javax.swing.JButton Valider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
